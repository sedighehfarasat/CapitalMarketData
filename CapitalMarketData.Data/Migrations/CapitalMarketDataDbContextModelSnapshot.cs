// <auto-generated />
using System;
using CapitalMarketData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapitalMarketData.Data.Migrations
{
    [DbContext(typeof(CapitalMarketDataDbContext))]
    partial class CapitalMarketDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Persian_100_CI_AI_KS_WS_SC")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.IndiInstiTradingData", b =>
                {
                    b.Property<string>("InstrumentId")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IndividualNumberOfTrades_BuySide")
                        .HasColumnType("int");

                    b.Property<int?>("IndividualNumberOfTrades_SellSide")
                        .HasColumnType("int");

                    b.Property<long?>("IndividualTradingVolume_BuySide")
                        .HasColumnType("bigint");

                    b.Property<long?>("IndividualTradingVolume_SellSide")
                        .HasColumnType("bigint");

                    b.Property<int?>("InstitutionalNumberOfTrades_BuySide")
                        .HasColumnType("int");

                    b.Property<int?>("InstitutionalNumberOfTrades_SellSide")
                        .HasColumnType("int");

                    b.Property<long?>("InstitutionalTradingVolume_BuySide")
                        .HasColumnType("bigint");

                    b.Property<long?>("InstitutionalTradingVolume_SellSide")
                        .HasColumnType("bigint");

                    b.HasKey("InstrumentId", "Date");

                    b.HasIndex("InstrumentId");

                    b.ToTable("IndividualInstitutionalTradingData", (string)null);
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.Instrument", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Sector")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Subsector")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Type")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Instruments", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Instrument");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.NAV", b =>
                {
                    b.Property<string>("InstrumentId")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NetAssetValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InstrumentId", "Date");

                    b.HasIndex("InstrumentId");

                    b.ToTable("NAVs", (string)null);
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.TradingData", b =>
                {
                    b.Property<string>("InstrumentId")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ClosingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HighestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LastPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LowerBoundPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LowestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NumberOfTrades")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpeningPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PreviousClosingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TradingValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TradingVolume")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UpperBoundPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InstrumentId", "Date");

                    b.HasIndex("InstrumentId");

                    b.ToTable("TradingData", (string)null);
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.ETF", b =>
                {
                    b.HasBaseType("CapitalMarketData.Entities.Entities.Instrument");

                    b.HasDiscriminator().HasValue("ETF");
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.Stock", b =>
                {
                    b.HasBaseType("CapitalMarketData.Entities.Entities.Instrument");

                    b.Property<int?>("Board")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Stock");
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.IndiInstiTradingData", b =>
                {
                    b.HasOne("CapitalMarketData.Entities.Entities.Instrument", "Instrument")
                        .WithMany("IndiInstiTradingData")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.NAV", b =>
                {
                    b.HasOne("CapitalMarketData.Entities.Entities.ETF", "ETF")
                        .WithMany("NAV")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ETF");
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.TradingData", b =>
                {
                    b.HasOne("CapitalMarketData.Entities.Entities.Instrument", "Instrument")
                        .WithMany("TradingData")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.Instrument", b =>
                {
                    b.Navigation("IndiInstiTradingData");

                    b.Navigation("TradingData");
                });

            modelBuilder.Entity("CapitalMarketData.Entities.Entities.ETF", b =>
                {
                    b.Navigation("NAV");
                });
#pragma warning restore 612, 618
        }
    }
}
